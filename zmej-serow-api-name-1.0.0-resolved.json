{
  "openapi": "3.0.0",
  "info": {
    "title": "api-title",
    "description": "api-description",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Our glorious server name"
    }
  ],
  "security": [
    {
      "BasicAuth": []
    }
  ],
  "paths": {
    "/getAliases": {
      "post": {
        "summary": "Get aliases",
        "description": "Get aliases for current user",
        "operationId": "getAliases",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "required": [
                      "method",
                      "params"
                    ],
                    "type": "object",
                    "properties": {
                      "method": {
                        "title": "getAliases",
                        "type": "string",
                        "description": "Method name.",
                        "example": "getAliases",
                        "default": "getAliases"
                      },
                      "params": {
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array",
                        "description": "profile id, name",
                        "nullable": false,
                        "items": {}
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/request-common"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JSON-RPC response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "result": {
                              "title": "aliases goes here",
                              "type": "array",
                              "description": "Response result",
                              "example": [
                                1,
                                2
                              ],
                              "items": {}
                            }
                          }
                        },
                        {
                          "$ref": "#/components/schemas/response-common"
                        }
                      ]
                    },
                    {
                      "$ref": "#/components/schemas/error"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "response-common": {
        "type": "object",
        "properties": {
          "id": {
            "title": "JSON-RPC request ID",
            "type": "integer",
            "description": "ID of corresponding request",
            "example": 0
          },
          "jsonrpc": {
            "title": "JSON-RPC Version (2.0)",
            "type": "string",
            "description": "JSON-RPC protocol mark.",
            "example": "2.0"
          }
        }
      },
      "error": {
        "allOf": [
          {
            "$ref": "#/components/schemas/response-common"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "type": "object",
                "properties": {
                  "name": {
                    "title": "JSON-RPC error type",
                    "type": "string",
                    "description": "JSON-RPC error mark",
                    "example": "JsonRpcInvalidParamsError"
                  },
                  "code": {
                    "title": "JSON-RPC error code",
                    "type": "integer",
                    "description": "Reference to error code",
                    "example": -32000
                  },
                  "data": {
                    "type": "array",
                    "nullable": true,
                    "items": {}
                  },
                  "message": {
                    "title": "Error description",
                    "type": "string",
                    "description": "Human-readable error explanation",
                    "example": "JsonRpcInvalidParamsError: Limit reached"
                  }
                }
              }
            }
          }
        ]
      },
      "request-common": {
        "required": [
          "id",
          "jsonrpc"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "JSON-RPC request ID",
            "type": "integer",
            "description": "The \"id\" is returned in the corresponding response object, so you can map one context to the other.\nIf you are making synchronous single calls, it might not make sense, but in an async call environment it is vital.\nIt should not be hard coded to 1, but set to a unique value for every request object.",
            "format": "int32",
            "example": 0,
            "default": 0
          },
          "jsonrpc": {
            "title": "JSON-RPC Version (2.0)",
            "type": "string",
            "description": "JSON-RPC protocol mark.",
            "example": "2.0",
            "default": "2.0"
          }
        }
      }
    },
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}
